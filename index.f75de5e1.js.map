{"mappings":"AAAA;AAEA,MAAM,WAAW,CAAC;IAChB,OAAO,CAAC,MAAM,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS;AAChD;AAEA,MAAM,WAAW,CAAC;IAChB,MAAM,QAAQ;WAAI,KAAK,QAAQ;KAAC,CAAC,IAAI,CAAC,CAAC,GAAG;QACxC,OAAO,SAAS,KAAK,SAAS;IAChC;IAEA,MAAM,OAAO,CAAC,CAAC,KAAO,KAAK,MAAM,CAAC;AACpC;AAEA,MAAM,eAAe,CAAC;IACpB,OAAO;WAAI,KAAK,QAAQ;KAAC,CAAC,GAAG,CAAC,CAAC,KAAQ,CAAA;YACrC,MAAM,GAAG,SAAS;YAClB,UAAU,GAAG,OAAO,CAAC,QAAQ;YAC7B,QAAQ,GAAG,OAAO,CAAC,MAAM;YACzB,KAAK,GAAG,OAAO,CAAC,GAAG;QACrB,CAAA;AACF;AAEA,MAAM,UAAU,SAAS,aAAa,CAAC;AAEvC,SAAS;AACT,aAAa","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst toNumber = (value) => {\n  return +value.dataset.salary.replace(/[$,]/g, '');\n};\n\nconst sortList = (list) => {\n  const items = [...list.children].sort((a, b) => {\n    return toNumber(b) - toNumber(a);\n  });\n\n  items.forEach((el) => list.append(el));\n};\n\nconst getEmployees = (list) => {\n  return [...list.children].map((el) => ({\n    name: el.innerHTML,\n    position: el.dataset.position,\n    salary: el.dataset.salary,\n    age: el.dataset.age,\n  }));\n};\n\nconst element = document.querySelector('ul');\n\nsortList(element);\ngetEmployees(element);\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}